:- consult('Logic.pl').

% TRADUCCIÓN ESPAÑOL -> INGLÉS CORREGIDA
traducir_es_en(OracionEs) :-
    tokenizar(OracionEs, TokensEs),
    (   oracion(TokensEs, [], [], TokensEn)  % ← CORREGIDO: [], TokensEn en lugar de TokensEn, []
    ->  atomic_list_concat(TokensEn, ' ', OracionEn),
        write('Traducción: '), write(OracionEn), nl
    ;   write('No entendí la oración'), nl
    ).

% TRADUCCIÓN INGLÉS -> ESPAÑOL CORREGIDA
traducir_en_es(OracionEn) :-
    tokenizar(OracionEn, TokensEn),
    (   oracion(TokensEs, [], TokensEn, [])  % ← Esto está correcto
    ->  atomic_list_concat(TokensEs, ' ', OracionEs),
        write('Traducción: '), write(OracionEs), nl
    ;   write('No entendí la oración'), nl
    ).

% MODO INTERACTIVO
translog_es :-
    write('TransLogES> '),
    read_line_to_string(user_input, Oracion),
    (Oracion == 'salir' -> true;
     traducir_es_en(Oracion),
     translog_es).

translog_en :-
    write('TransLogEN> '),
    read_line_to_string(user_input, Oracion),
    (Oracion == 'quit' -> true;
     traducir_en_es(Oracion),
     translog_en).

% TOKENIZACIÓN MEJORADA
tokenizar(Oracion, Tokens) :-
    split_string(Oracion, " ", "", Strings),
    maplist(atom_string, Tokens, Strings).

% INICIALIZACIÓN
iniciar :-
    write('=== TransLog - Sistema de Traducción ==='), nl,
    write('Modos disponibles:'), nl,
    write('1. translog_es - Traducir español -> inglés'), nl,
    write('2. translog_en - Traducir inglés -> español'), nl,
    write('Escribe "salir" o "quit" para terminar.'), nl, nl.
